Here is my test-graphql.http file:

### Recipe API

### Localhost Query Examples

### Get a single recipe
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "{ recipe(id: \"6529e0aed3fb818c8bc06ad9\") { id name ingredients steps prepTime cookTime cuisineType calories imageUrl } }"
}

### Get all recipes
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "{ recipes { id name ingredients steps prepTime cookTime cuisineType calories imageUrl } }"
}

### Add a new recipe
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { addRecipe(name: \"Test14\", ingredients: [\"Flour\", \"Milk\", \"Eggs\"], steps: [\"Mix ingredients\", \"Cook on pan\"], prepTime: 10, cookTime: 5, cuisineType: \"American\", calories: 200, imageUrl: \"https://example.com/pancakes.jpg\") { id name } }"
}

### Update a recipe
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { updateRecipe(id: \"6534660622a5d3aa1d9f3206\", input: {name: \"Ice Cream\", ingredients: [\"Mud\", \"Water\", \"meat\"], steps: [\"Mix ingredients\", \"Cook on pan\"], prepTime: 10, cookTime: 5, cuisineType: \"American\", calories: 200, imageUrl: \"https://example.com/pancakes.jpg\"}) { id name } }"
}

### Delete a recipe
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { deleteRecipe(id: \"653469fc4348f988fd2f27f6\") { id name } }"
}

### Production Query Examples

### Get a single recipe
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "{ recipe(id: \"6529e0aed3fb818c8bc06ad9\") { id name ingredients steps prepTime cookTime cuisineType calories imageUrl } }"
}

### Get all recipes
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "{ recipes { id name ingredients steps prepTime cookTime cuisineType calories imageUrl } }"
}

### Add a new recipe
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { addRecipe(name: \"Test15\", ingredients: [\"Flour\", \"Milk\", \"Eggs\"], steps: [\"Mix ingredients\", \"Cook on pan\"], prepTime: 10, cookTime: 5, cuisineType: \"American\", calories: 200, imageUrl: \"https://example.com/pancakes.jpg\") { id name } }"
}

### Update a recipe
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { updateRecipe(id: \"6533400d8cd7dae7eb1b7c1e\", input: {name: \"Pancakes\", ingredients: [\"Mud\", \"Water\", \"meat\"], steps: [\"Mix ingredients\", \"Cook on pan\"], prepTime: 10, cookTime: 5, cuisineType: \"American\", calories: 200, imageUrl: \"https://example.com/pancakes.jpg\"}) { id name } }"
}

### Delete a recipe
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { deleteRecipe(id: \"6533400d8cd7dae7eb1b7c1e\") { id name } }"
}

### User API

### Localhost User Query Examples

### Get a single user
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "{ user(id: \"someUserId\") { id username email role created_at updated_at } }"
}

### Get all users
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "{ users { id username email role created_at updated_at } }"
}

### Add a new user
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { addUser(input: {username: \"newuser\", email: \"newuser@example.com\", password: \"password\", role: \"USER\"}) { id username email role } }"
}

### Update a user
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { updateUser(id: \"someUserId\", input: {username: \"updateduser\", email: \"updateduser@example.com\", password: \"newpassword\", role: \"ADMIN\"}) { id username email role } }"
}

### Delete a user
POST http://localhost:5127/graphql
Content-Type: application/json

{
  "query": "mutation { deleteUser(id: \"someUserId\") { id username email role } }"
}

### Production User Query Examples

### Get a single user
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "{ user(id: \"someUserId\") { id username email role created_at updated_at } }"
}

### Get all users
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "{ users { id username email role created_at updated_at } }"
}

### Add a new user
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { addUser(input: {username: \"newuser\", email: \"newuser@example.com\", password: \"password\", role: \"USER\"}) { id username email role } }"
}

### Update a user
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { updateUser(id: \"someUserId\", input: {username: \"updateduser\", email: \"updateduser@example.com\", password: \"newpassword\", role: \"ADMIN\"}) { id username email role } }"
}

### Delete a user
POST https://cse-341-ms-project.onrender.com/graphql
Content-Type: application/json

{
  "query": "mutation { deleteUser(id: \"someUserId\") { id username email role } }"
}